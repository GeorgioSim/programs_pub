model2 <- nls(y ~ b1*x^2+b2,start = list(b1 = -100,b2 = 300))
AUGdata<-augment(model)
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(x,y,xmin = x-SE_x,xmax = x+SE_x))+
p
p
mod
x
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")
p
p<-p+geom_errorbar(data=Rdata,mapping=aes(x,ymin = y-SE_y,ymax = y+SE_y))
p
p<-p+geom_errorbarh(data=Rdata,mapping=aes(x,y,xmin = x-SE_x,xmax = x+SE_x))
p<-p+geom_errorbarh(data=Rdata,mapping=aes(y,xmin = x-SE_x,xmax = x+SE_x))
geom_errorbarh(data=Rdata,mapping=aes(x,y,xmin = x-SE_x,xmax = x+SE_x))
p<-p+  geom_errorbarh(data=Rdata,mapping=aes(x,y,xmin = x-SE_x,xmax = x+SE_x))
p<-p+geom_errorbarh(data=Rdata,mapping=aes(xmin = x-SE_x,xmax = x+SE_x))
p
p<-p+  geom_errorbarh(data=Rdata,mapping=aes(y,xmin = x-SE_x,xmax = x+SE_x))
x\
x
x+SE_x
y
p<-p+geom_errorbarh(data=Rdata,mapping=aes(xmin = x-SE_x,xmax = x+SE_x),y)
q
q()
#Gia na leitoyrgisei thelei etoima data morfhs
#x,y,x_SE,y_SE (standard errors) apo excel arxeio
library(readxl)
library(ggplot2)
library(dplyr)
library(broom)
library(tidyselect)
library(ggthemes)
library(ggrepel)
library(ggpubr)
args(ggplot)
Rdata<-read_excel("Rdata.xlsx")
View(Rdata)
x<-Rdata$`x`
y<-Rdata$`y`
SE_x<-Rdata$`x_SE`
SE_y<-Rdata$`y_SE`
mod<-lm(y ~ x)
summary(mod)
attributes(mod) #gia na dw ti exei san attributes
mod$coefficients  #slope kai intercept
model <- nls(y ~ b1/x+b2,start = list(b1 = -100,b2 = 300))
View(model)
AUGdata<-augment(model)
View(AUGdata)
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x,ymin = y-SE_y,ymax = y+SE_y))
p
p<-p+geom_errorbarh(data=Rdata,mapping=aes(y,xmin = x-SE_x,xmax = x+SE_x))
p<-p+ geom_errorbarh(data=Rdata,mapping=aes(x,y,xmin = x-SE_x,xmax = x+SE_x))
p
p<-p+  geom_errorbarh(data=Rdata,mapping=aes(y,xmin = x-SE_x,xmax = x+SE_x))
p
p<-p+  geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(x=x,y=y,xmin = x-SE_x,xmax = x+SE_x))
p
p<-p+  geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
rm(p)
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")
p<-p+  geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
#geom_abline eytheia
geom_abline(data=Rdata, aes(x,y),intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
#linear regression, tha xreiastei meta sto geom_abline
mod<-lm(y ~ x)
summary(mod)
attributes(mod) #gia na dw ti exei san attributes
mod$coefficients  #slope kai intercept
#geom_abline eytheia
geom_abline(data=Rdata, aes(x,y),intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])+
p
p<-p+  #geom_abline eytheia
geom_abline(data=Rdata, aes(x,y),intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])+
p
p
rm(p)
Rdata<-read_excel("Rdata.xlsx")
View(Rdata)
x<-Rdata$`x`
y<-Rdata$`y`
SE_x<-Rdata$`x_SE`
SE_y<-Rdata$`y_SE`
#linear regression, tha xreiastei meta sto geom_abline
mod<-lm(y ~ x)
summary(mod)
attributes(mod) #gia na dw ti exei san attributes
mod$coefficients  #slope kai intercept
#try nonlinear
# Take the assumed values and fit into the models:
#y=a/x+b
model <- nls(y ~ b1/x+b2,start = list(b1 = -100,b2 = 300))
#y=ax^2+b
model2 <- nls(y ~ b1*x^2+b2,start = list(b1 = -100,b2 = 300))
AUGdata<-augment(model)
#to geom_abline allazei kathe fora, isws prepei na to allazw kai gw, selida 563
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
p<-p+ geom_abline(data=Rdata, aes(x,y),intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])+
p
p
p<-p+ geom_abline(data=Rdata, aes(x,y),intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
p<-p+ geom_abline(data=Rdata, mapping=aes(x,y),intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
p<-p+ geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
#data=Rdata, mapping=aes(x,y)
p
p<-p-geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
rm(p)
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
p<-p+  geom_point(data=AUGdata,aes(x, y)) +
geom_line(data=AUGdata,aes(x, .fitted), col = "blue")
p
# Plot the chart with new data by fitting it to a prediction from 100 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 100))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
lines(xmodel,ymodel)
new.data
neo.data<- data.frame(xmodel,ymodel)
View(neo.data)
View(neo.data)
#try geom_abline
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel)) +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0) +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
p<-p+geom_line(aes(xmodel,ymodel))+
geom_area(mapping = aes(x = ifelse(x>=min(x) & x<= max(x) , x, 0)), fill = "green")
p
new.data <- data.frame(x = seq(min(x),max(x),len = 10000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
#try geom_abline
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0) +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
rm(p)
#to geom_abline allazei kathe fora, isws prepei na to allazw kai gw, selida 563
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
# Plot the chart with new data by fitting it to a prediction from 100 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 10000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
#mono gia to aplo plot:
#try geom_abline
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0) +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
#try geom_abline
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
p<-p+  geom_area(data=neo.data, mapping = aes(xmodel = ifelse(xmodel>=min(x) & xmodel<= max(x) , xmodel, 0),ymodel),fill = "green")
p<-p+  geom_area(data=neo.data, mapping = aes(xmodel = ifelse(xmodel>=min(xmodel) & xmodel<= max(xmodel) , xmodel, 0),ymodel),fill = "green")
rm(p)
#to geom_abline allazei kathe fora, isws prepei na to allazw kai gw, selida 563
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
#geom_abline eytheia elaxistwn
p<-p+ geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
# Plot the chart with new data by fitting it to a prediction from 10000 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 10000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
#geom_line
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
p<-p+  geom_area(data=neo.data, mapping = aes(xmodel = ifelse(xmodel>=min(xmodel) & xmodel<= max(xmodel) , xmodel, 0),ymodel),fill = "green")
p<-p+  geom_area(data=neo.data, mapping = aes(xmodel = ifelse(xmodel>=min(xmodel) & xmodel<= max(xmodel) , xmodel, 0)),fill = "green")
#geom_area
p<-p+  geom_area( aes(xmodel = ifelse(xmodel>=min(xmodel) & xmodel<= max(xmodel) , xmodel, 0),ymodel),fill = "green")
p<-p+  geom_area( aes(x = ifelse(x>=min(x) & x<= max(x) , x, 0)),fill = "green")
p
#geom_area
p<-p+  geom_area( aes(x = ifelse(x>=min(x) & x<= max(x) , x, 0),y),fill = "green")
p
#geom_area
p<-p+  geom_area( aes(xmodel = ifelse(xmodel>=min(x) & xmodel<= max(x) , xmodel, 0),ymodel),fill = "green")
p<-p+  geom_line(aes(xmodel,ymodel))+
geom_area( aes(xmodel = ifelse(xmodel>=min(x) & xmodel<= max(x) , xmodel, 0),ymodel),fill = "green")
xmodel
p<-p+  geom_line(data=neo.data,aes(xmodel,ymodel))
p<-p+geom_area( aes(xmodel = ifelse(xmodel>=min(x) & xmodel<= max(x) , xmodel, 0),ymodel),fill = "green")
p<-p=  geom_area( aes(xmodel = ifelse(xmodel>=min(xmodel) & xmodel<= max(xmodel) , xmodel, 0),ymodel),fill = "green")
rm(p)
#Gia na leitoyrgisei thelei etoima data morfhs
#x,y,x_SE,y_SE (standard errors) apo excel arxeio
library(readxl)
library(ggplot2)
library(dplyr)
library(broom)
library(tidyselect)
library(ggthemes)
library(ggrepel)
library(ggpubr)
args(ggplot)
Rdata<-read_excel("Rdata.xlsx")
View(Rdata)
x<-Rdata$`x`
y<-Rdata$`y`
SE_x<-Rdata$`x_SE`
SE_y<-Rdata$`y_SE`
#linear regression, tha xreiastei meta sto geom_abline
mod<-lm(y ~ x)
summary(mod)
attributes(mod) #gia na dw ti exei san attributes
mod$coefficients  #slope kai intercept
#to geom_abline allazei kathe fora, isws prepei na to allazw kai gw, selida 563
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
p<-p+ geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
p
# Plot the chart with new data by fitting it to a prediction from 10000 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 1000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
#geom_line
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
cabline=cat(sprintf("y=%s x+ %s\n",  mod$coefficients[[2]],  mod$coefficients[[1]]))
p
cabline
p<-p+text(x=0.8*(max(x)-min(x)),y=0.8*(max(y)-min(y)), label="hi")
p<-p+text(data=Rdata,x=0.8*(max(x)-min(x)),y=0.8*(max(y)-min(y)), label="hi")
p<-p+text(data=Rdata,aes(x=0.8*(max(x)-min(x)),y=0.8*(max(y)-min(y))), label="hi")
p<-p+text(data=Rdata,aes(x=0.8*(max(x)-min(x)),y=0.8*(max(y)-min(y))), label="mod$coefficients[[1]]")
xtext<- 0.8*(max(x)-min(x))
ytext<- 0.8*(max(x)-min(x))
xtext<- 0.8*(max(x)-min(x))
ytext<- 0.8*(max(y)-min(y))
#try text
p<-p+text(xtext, ytext, label=("bruh"))
#try text
p<-p+text(xmodel=xtext, ymodel=ytext, label=("bruh"))
p<-p+text(x=xtext, y=ytext, label=("bruh"))
p<-p+geom_text(x=xtext, y=ytext, label=("bruh"))
p
p<-p + annotate("text", x = xtext, y = ytext, label = "Some text")
p
max(y)
xtext<- 0.8*(max(x)-min(x))+min(x)
ytext<- 0.8*(max(y)-min(y))+min(y)
#try text
p<-p + annotate("text", x = xtext, y = ytext, label = "Some text")
p
rm(p)
to geom_abline allazei kathe fora, isws prepei na to allazw kai gw, selida 563
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
#geom_abline eytheia elaxistwn
p<-p+ geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
p
# Plot the chart with new data by fitting it to a prediction from 10000 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 1000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
#geom_line
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
xtext<- 0.8*(max(x)-min(x))+min(x)
ytext<- 0.8*(max(y)-min(y))+min(y)
p<-p + annotate("text", x = xtext, y = ytext, label = "mod$coefficients[[2]]")
p
p<-p + annotate("text", x = xtext, y = ytext, label = mod$coefficients[[2]])
p
p<-p + annotate("text", x = xtext, y = ytext, label = c("slope=",mod$coefficients[[2]]))
p
rm(p)
#to geom_abline allazei kathe fora, isws prepei na to allazw kai gw, selida 563
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
#geom_abline eytheia elaxistwn
p<-p+ geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
p
# Plot the chart with new data by fitting it to a prediction from 10000 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 1000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
#geom_line
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
#text
xtext<- 0.8*(max(x)-min(x))+min(x)
ytext<- 0.8*(max(y)-min(y))+min(y)
p<-p + annotate("text", x = xtext, y = ytext, label = c("slope=",mod$coefficients[[2]]))
p
p<-p + annotate("text", x = xtext, y = ytext, label = c("slope=%s",mod$coefficients[[2]]))
p
rm(p)
#to geom_abline allazei kathe fora, isws prepei na to allazw kai gw, selida 563
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
#geom_abline eytheia elaxistwn
p<-p+ geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
p
# Plot the chart with new data by fitting it to a prediction from 10000 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 1000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
#geom_line
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
#text
xtext<- 0.8*(max(x)-min(x))+min(x)
ytext<- 0.8*(max(y)-min(y))+min(y)
p<-p + annotate("text", x = xtext, y = ytext, label = c("slope=%s",mod$coefficients[[2]]))
p
p<-p + annotate("text", x = xtext, y = ytext, label = cat("slope=",mod$coefficients[[2]]))
p
rm(p)
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
#geom_abline eytheia elaxistwn
p<-p+ geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
p
# Plot the chart with new data by fitting it to a prediction from 10000 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 1000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
#geom_line
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
#text
xtext<- 0.8*(max(x)-min(x))+min(x)
ytext<- 0.8*(max(y)-min(y))+min(y)
p
p<-p + annotate("text", x = xtext, y = ytext, label = cat("slope=",mod$coefficients[[2]]))
p
cabline=cat(sprintf("y=%s x+ %s\n",  mod$coefficients[[2]],  mod$coefficients[[1]]),file="test.txt")
cabline
cabline=cat(sprintf("y=%s x+ %s\n",  mod$coefficients[[2]],  mod$coefficients[[1]]),"\n",file="test.txt")
cabline
test2 <- readLines("test.txt")
p<-p + annotate("text", x = xtext, y = ytext, label = test2)
p
rm(p)
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
#geom_abline eytheia elaxistwn
p<-p+ geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
p
#text gia abline
xtext<- 0.9*(max(x)-min(x))+min(x)
ytext<- 0.9*(max(y)-min(y))+min(y)
cat(sprintf("y=%s x+ %s\n",  mod$coefficients[[2]],  mod$coefficients[[1]]),"\n",file="test.txt")
test2 <- readLines("test.txt")
p<-p + annotate("text", x = xtext, y = ytext, label = test2)
p
#text gia abline
xtext<- 0.8*(max(x)-min(x))+min(x)
ytext<- 0.99*(max(y)-min(y))+min(y)
cat(sprintf("y=%s x+ %s\n",  mod$coefficients[[2]],  mod$coefficients[[1]]),"\n",file="test.txt")
test2 <- readLines("test.txt")
p<-p + annotate("text", x = xtext, y = ytext, label = test2)
p
# Plot the chart with new data by fitting it to a prediction from 10000 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 1000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
#Gia na leitoyrgisei thelei etoima data morfhs
#x,y,x_SE,y_SE (standard errors) apo excel arxeio
library(readxl)
library(ggplot2)
library(dplyr)
library(broom)
library(tidyselect)
library(ggthemes)
library(ggrepel)
library(ggpubr)
args(ggplot)
Rdata<-read_excel("Rdata.xlsx")
View(Rdata)
x<-Rdata$`x`
y<-Rdata$`y`
SE_x<-Rdata$`x_SE`
SE_y<-Rdata$`y_SE`
#linear regression, tha xreiastei meta sto geom_abline
mod<-lm(y ~ x)
summary(mod)
attributes(mod) #gia na dw ti exei san attributes
mod$coefficients  #slope kai intercept
#to geom_abline allazei kathe fora, isws prepei na to allazw kai gw, selida 563
p <-ggplot()+
geom_point(data=Rdata, aes(x,y), size = 2, color ="blue")+
xlab("x") +
ylab("y") +
ggtitle("Trial")+
geom_errorbar(data=Rdata,mapping=aes(x=x,ymin = y-SE_y,ymax = y+SE_y)) +
geom_errorbarh(data=Rdata,mapping=aes(y=y,xmin = x-SE_x,xmax = x+SE_x))
p
#geom_abline eytheia elaxistwn + text gia abline
p<-p+ geom_abline(intercept = mod$coefficients[[1]], slope = mod$coefficients[[2]])
p
xtext<- 0.8*(max(x)-min(x))+min(x)
ytext<- 0.99*(max(y)-min(y))+min(y)
cat(sprintf("y=%s x+ %s\n",  mod$coefficients[[2]],  mod$coefficients[[1]]),"\n",file="test.txt")
test2 <- readLines("test.txt")
p<-p + annotate("text", x = xtext, y = ytext, label = test2)
p
#geom_line: Plot the chart with new data by fitting it to a prediction from 10000 data points.
new.data <- data.frame(x = seq(min(x),max(x),len = 1000))
xmodel<-new.data$x
ymodel<-predict(model,newdata = new.data)
neo.data<- data.frame(xmodel,ymodel)
p<-p+ geom_point(data=neo.data, aes(xmodel, ymodel),size = 0,col = "yellow") +
geom_line(data=neo.data,aes(xmodel, ymodel), col = "yellow")
p
